networks:
  my_network:
    driver: bridge
services:
  api-gateway:
    build:
      context: .
      dockerfile: src/Gateway/APIGateway/Dockerfile
    ports:
      - "5001:8080"
    depends_on:
      - post.api
      - comment.api
      - chat.api
      - friendship.api
      - media.api
      - user.api
      - notification.api
      - stats.api
    networks:
          - my_network

  chat.api:
    image: chat.api
    build:
      context: .
      dockerfile: src/Services/Chat/Chat.API/Dockerfile
    ports:
      - "5010:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - CONNECTION_STRING=User Id=postgres; Password=Password12*;Host=chat-db;Port=5432;Database=sm-ChatDb;
    depends_on:
      - chat-db
    networks:
      - my_network

  chat-db:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Password12*
      POSTGRES_DB: sm-ChatDb
    ports:
      - "5441:5432"
    volumes:
      - chat_data:/var/lib/postgresql/data
    networks:
      - my_network
  comment.api:
    image: comment.api
    build:
      context: .
      dockerfile: src/Services/Comment/Comment.API/Dockerfile
    ports:
      - "5011:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - CONNECTION_STRING=User Id=postgres; Password=Password12*;Host=comment-db;Port=5432;Database=sm-CommentDb;
    depends_on:
      - comment-db
    networks:
      - my_network

  comment-db:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Password12*
      POSTGRES_DB: sm-CommentDb
    ports:
      - "5434:5432"
    volumes:
      - comment_data:/var/lib/postgresql/data
    networks:
      - my_network

  friendship.api:
    image: friendship.api
    build:
      context: .
      dockerfile: src/Services/Friendship/Friendship.API/Dockerfile
    ports:
      - "5012:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - CONNECTION_STRING=User Id=postgres; Password=Password12*;Host=friendship-db;Port=5432;Database=sm-FriendshipDb;
    depends_on:
      - friendship-db
    networks:
      - my_network

  friendship-db:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Password12*
      POSTGRES_DB: sm-FriendshipDb
    ports:
      - "5435:5432"
    volumes:
      - friendship_data:/var/lib/postgresql/data
    networks:
      - my_network

  media.api:
    image: media.api
    build:
      context: .
      dockerfile: src/Services/Media/Media.API/Dockerfile
    ports:
      - "5013:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - CONNECTION_STRING=User Id=media-db; Password=Password12*;Host=localhost;Port=5432;Database=sm-MediaDb;
    depends_on:
      - media-db
    networks:
      - my_network

  media-db:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Password12*
      POSTGRES_DB: sm-MediaDb
    ports:
      - "5436:5432"
    volumes:
      - media_data:/var/lib/postgresql/data
    networks:
      - my_network

  user.api:
    image: user.api
    build:
      context: .
      dockerfile: src/Services/User/User.API/Dockerfile
    ports:
      - "5014:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - CONNECTION_STRING=User Id=postgres; Password=Password12*;Host=user-db;Port=5432;Database=sm-UserDb;  
    depends_on:
      - user-db
    networks:
      - my_network
  user-db:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Password12*
      POSTGRES_DB: sm-UserDb
    ports:
      - "5437:5432"
    volumes:
      - user_data:/var/lib/postgresql/data
    networks:
      - my_network
    healthcheck:
        test: [ "CMD-SHELL", "pg_isready -U postgres" ]
        interval: 10s
        retries: 5
        timeout: 5s
        
  post.api:
    image: post.api
    build:
      context: .
      dockerfile: src/Services/Post/Post.API/Dockerfile
    ports:
      - "5015:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - CONNECTION_STRING=User Id=postgres; Password=Password12*;Host=post-db;Port=5432;Database=sm-PostDb;
    depends_on:
      - post-db
    networks:
      - my_network

  post-db:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Password12*
      POSTGRES_DB: sm-PostDb
    ports:
      - "5438:5432"
    volumes:
      - post_data:/var/lib/postgresql/data
    networks:
      - my_network
        
  notification.api:
    image: notification.api
    build:
      context: .
      dockerfile: src/Services/Notification/Notification.API/Dockerfile
    ports:
      - "5016:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - CONNECTION_STRING=User Id=postgres; Password=Password12*;Host=notification-db;Port=5432;Database=sm-NotificationDb;
    depends_on:
      - notification-db
    networks:
      - my_network

  notification-db:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Password12*
      POSTGRES_DB: sm-NotificationDb
    ports:
      - "5439:5432"
    volumes:
      - notification_data:/var/lib/postgresql/data
    networks:
      - my_network

  stats.api:
    image: stats.api
    build:
      context: .
      dockerfile: src/Services/Stats/Stats.API/Dockerfile
    ports:
      - "5017:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - CONNECTION_STRING=User Id=postgres; Password=Password12*;Host=stats-db;Port=5440;Database=sm-StatsDb;
    depends_on:
      - stats-db
    networks:
      - my_network

  stats-db:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Password12*
      POSTGRES_DB: sm-StatsDb
    ports:
      - "5440:5432"
    volumes:
      - stats_data:/var/lib/postgresql/data
    networks:
      - my_network
volumes:
  chat_data:
  comment_data:
  friendship_data:
  media_data:
  user_data:
  post_data:
  notification_data:
  stats_data:
